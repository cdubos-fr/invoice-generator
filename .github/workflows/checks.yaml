
name: CI -> Tests, Lint, Types, Security
on:
  push:
    branches: [ main ]
    tags: [ "*.*.*" ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  tox:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Setup uv
        uses: astral-sh/setup-uv@v1
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.python-version }}-
            ${{ runner.os }}-uv-
      - name: Cache tox env
        uses: actions/cache@v4
        with:
          path: .tox
          key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml','**/tox.ini') }}
          restore-keys: |
            ${{ runner.os }}-tox-${{ matrix.python-version }}-
            ${{ runner.os }}-tox-
      - run: pip install tox tox-uv tox-gh
      - name: Run tox via tox-gh
        run: tox --skip-env "build" --parallel

  build:
    runs-on: ubuntu-latest
    needs: tox
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Setup uv
        uses: astral-sh/setup-uv@v1
      - run: pip install tox tox-uv
      - name: Build sdist & wheel (tox)
        run: tox -e build
      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
